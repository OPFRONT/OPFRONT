/**
 * https://gist.github.com/BenMorel/e9e34c08360ebbbd0634
 *
 * Fix for vw, vh, vmin, vmax on iOS 7.
 * http://caniuse.com/#feat=viewport-units
 *
 * This fix works by replacing viewport units with px values on known screen sizes.
 *
 * iPhone 6 and 6 Plus cannot run iOS 7, so are not targeted by this fix.
 * Target devices running iOS 8+ will incidentally execute the media query,
 * but this will still produce the expected result; so this is not a problem.
 *
 * As an example, replace:
 *
 *   height: 50vh;
 *   font-size: 5vmin;
 *
 * with:
 *
 *   @include viewport-unit(height, 50vh);
 *   @include viewport-unit(font-size, 5vmin);
 */

@mixin viewport-unit($property, $value) {
    #{$property}: $value;

    $unit: unit($value);

    @if (index((vw, vh, vmin, vmax), $unit) != null) {
        $devices: (
                        (768px, 1024px), // iPad (all versions)
                        (320px, 480px),  // iPhone 4
                        (320px, 568px)   // iPhone 5, 5C, 5S
        );

        @each $device in $devices {
            $device-width: nth($device, 1);
            $device-height: nth($device, 2);

            $device-query: "only screen and (-webkit-min-device-pixel-ratio: 1)";
            $device-query: "#{$device-query} and (device-width: #{$device-width})";
            $device-query: "#{$device-query} and (device-height: #{$device-height})";

            $percent: $value / ($value * 0 + 1); // see https://github.com/sass/sass/issues/533

            $percent-width: $device-width * $percent / 100;
            $percent-height: $device-height * $percent / 100;

            @if ($unit == vmin or $unit == vmax) {
                @media #{$device-query} {
                    #{$property}: if($unit == vmin, $percent-width, $percent-height);
                }
            }
            @else {
                @media #{$device-query} and (orientation: portrait) {
                    #{$property}: if($unit == vw, $percent-width, $percent-height);
                }

                @media #{$device-query} and (orientation: landscape) {
                    #{$property}: if($unit == vw, $percent-height, $percent-width);
                }
            }
        }
    }
}

$adobe-letter-spacing-ratio: 7/90;
@mixin letter-spacing-from-adobe($value) {
    letter-spacing: #{$value * $adobe-letter-spacing-ratio}px;
}

@mixin black-section() {
    position: fixed;
    transition: 0s;
    background-color: black;
    color: white;
}

$bg:"https://images.unsplash.com/photo-1471015060382-6cbd8b4e34d0?dpr=2&auto=format&crop=entropy&fit=crop&w=1500&h=1000&q=80&cs=tinysrgb",
    "https://images.unsplash.com/photo-1450027179084-b3ff1fce4bb5?dpr=2&auto=format&crop=entropy&fit=crop&w=1500&h=1000&q=80&cs=tinysrgb",
    "https://images.unsplash.com/photo-1471565661762-b9dfae862dbe?dpr=2&auto=format&crop=entropy&fit=crop&w=1500&h=1000&q=80&cs=tinysrgb",
    "https://images.unsplash.com/photo-1442810480970-6d3fc310e3eb?dpr=2&auto=format&crop=entropy&fit=crop&w=1500&h=999&q=80&cs=tinysrgb";

@mixin random-bg-image() {
    background-image: url(nth($bg, random(4)));
}

@mixin centered() {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 1000px;
}
